version: '2'

volumes:
  cs-ansible:
  jenkins-docker-certs:
  jenkins-data:
  
services:
  control:
    image: kriti/ansible-control:2.0.0
    ports:
      - "8000:8000"
    volumes:
      - cs-ansible:/root/workspace
    domainname: codespaces.io
    hostname: control
    restart: always
    
  orders:
    image: weaveworksdemos/orders:0.4.7
    domainname: codespaces.io
    hostname: orders
    restart: always
    cap_drop:
      - all
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid
    environment:
      - JAVA_OPTS=-Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false
    ports:
      - "8082:80"
      
  orders-db:
    image: mongo:3.4
    domainname: codespaces.io
    hostname: orders-db
    restart: always
    cap_drop:
      - all
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid
      
  jenkins:
    image: jenkinsci/blueocean
    ports:
      - 8080:8080
      - 50000:50000
    environment:
      - DOCKER_HOST=tcp://docker:2376
      - DOCKER_CERT_PATH=/certs/client
      - DOCKER_TLS_VERIFY=1
    networks:
      custom:
        ipv4_address: 192.168.61.15
    dns: 8.8.8.8
    domainname: codespaces.io
    hostname: jenkins
    restart: always
    volumes:
      - jenkins-data:/var/jenkins_home
      - jenkins-docker-certs:/certs/client:ro
    depends_on: 
      - docker

  docker:
    image: docker:dind
    ports:
      - 2376:2376
    environment:
      - DOCKER_TLS_CERTDIR=/certs
    networks:
      custom:
        ipv4_address: 192.168.61.16
        aliases:
          - docker
    privileged: true
    domainname: codespaces.io
    hostname: docker
    restart: always
    volumes:
      - jenkins-docker-certs:/certs/client
      - jenkins-data:/var/jenkins_home
